---
name: sonarqube

networks: # docker network create proxy
  proxy:
    name: proxy
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: proxy
    external: true

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data:

services:
  sonarqube:
    container_name: sonarqube
    image: sonarqube:25.5.0.107428-community
    restart: unless-stopped
    networks:
      - proxy
    depends_on:
      - sonar_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - "sonarqube_conf:/opt/sonarqube/conf"
      - "sonarqube_data:/opt/sonarqube/data"
      - "sonarqube_extensions:/opt/sonarqube/extensions"
      - "sonarqube_logs:/opt/sonarqube/logs"
      - "sonarqube_temp:/opt/sonarqube/temp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.entrypoints=https"
      - "traefik.http.routers.sonarqube.rule=Host(`sonarqube.local.irishlab.io`)"
      - "traefik.http.routers.sonarqube.service=sonarqube"
      - "traefik.http.routers.sonarqube.tls=true"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"

  sonar_db:
    container_name: sonar_db
    image: postgres:13
    restart: unless-stopped
    networks:
      - proxy
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - "sonar_db:/var/lib/postgresql"
      - "sonar_db_data:/var/lib/postgresql/data"
